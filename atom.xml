<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://acoldfront.github.io/</id>
    <title>Crazer的自留地</title>
    <updated>2020-05-05T03:43:29.995Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://acoldfront.github.io/"/>
    <link rel="self" href="https://acoldfront.github.io/atom.xml"/>
    <subtitle>静坐长思己过，闲谈莫论人非</subtitle>
    <logo>https://acoldfront.github.io/images/avatar.png</logo>
    <icon>https://acoldfront.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Crazer的自留地</rights>
    <entry>
        <title type="html"><![CDATA[C语言编程实例：3、百元买鸡]]></title>
        <id>https://acoldfront.github.io/post/c-example3/</id>
        <link href="https://acoldfront.github.io/post/c-example3/">
        </link>
        <updated>2020-05-05T03:39:52.000Z</updated>
        <summary type="html"><![CDATA[<blockquote>
<p>中国古代数学家张丘建在他的《算经》中提出了一个著名的“百钱买百鸡问题”，鸡翁一，值钱五，鸡母一，值钱三，鸡雏三，值钱一，百钱买百鸡，问翁、母、雏各几何？</p>
</blockquote>
]]></summary>
        <content type="html"><![CDATA[<blockquote>
<p>中国古代数学家张丘建在他的《算经》中提出了一个著名的“百钱买百鸡问题”，鸡翁一，值钱五，鸡母一，值钱三，鸡雏三，值钱一，百钱买百鸡，问翁、母、雏各几何？</p>
</blockquote>
<!-- more -->
<p><strong>实现过程：</strong><br>
(1)使用 for 语句对 3 种鸡的数嫌在事先确定好的范围内进行穷举并判断，对满足条件的 3 种鸡的数量按指定格式输出，否则进行下次循环。</p>
<p>(2) 程序的代码如下：</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

int main(void) {
   int cook, hen, chick;   //定义变童为基本整型

    for (cook = 0; cook &lt;= 100; ++cook) {
        for (hen = 0; hen &lt;= 100; ++hen) {
            for (chick = 0; chick &lt;= 100; ++chick) {
                if ((5 * cook + 3 * hen + chick / 3) == 100 &amp;&amp; chick % 3 == 0 &amp;&amp; cook+hen+chick==100)
                    //(5 * cook + 3 * hen + chick / 3) == 100   判断钱数是否等于 100
                    //chick % 3 == 0    判断小鸡数是否能被 3 整除
                    //cook+hen+chick==100  判断购买的鸡数是否等于 100
                    printf(&quot;公鸡 %2d 只，母鸡 %2d 只，小鸡 %2d 只\n&quot;, cook, hen, chick);
            }
        }
    }
    return 0;
}
</code></pre>
<p>输出结果：</p>
<pre><code>公鸡  0 只，母鸡 25 只，小鸡 75 只
公鸡  4 只，母鸡 18 只，小鸡 78 只
公鸡  8 只，母鸡 11 只，小鸡 81 只
公鸡 12 只，母鸡  4 只，小鸡 84 只
</code></pre>
<p>###技术要点： ###<br>
根据题意设公鸡、母鸡和雏鸡分别为 cock、hen 和 chick，如果 100 元全买公鸡，那么最多能买 20 只，所以 cock 的范围是大于等于 0 且小于等于 20；如果全买母鸡，那么最多能买 33 只，所以 hen 的范围是大于等于 0 且小于等于 33；如果 100 元钱全买小鸡，那么最多能买 99 只（根据题意小鸡的数量应小于 100 且是 3 的倍数）。</p>
<p>在确定了各种鸡的范围后进行穷举并判断，判断的条件有以下 3 点：<br>
(1) 所买的 3 种鸡的钱数总和为 100。<br>
(2) 所买的 3 种鸡的数量之和为 100。<br>
(3) 所买的小鸡数必须是 3 的倍数。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C语言编程实例：2、猴子吃桃问题]]></title>
        <id>https://acoldfront.github.io/post/c-example2/</id>
        <link href="https://acoldfront.github.io/post/c-example2/">
        </link>
        <updated>2020-05-05T03:29:51.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>猴子吃桃问题：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天早上又将第一天剩下的桃子吃掉一半，有多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第 10 天早上想再吃时，发现只剩下一个桃子了。编写程序求猴子第一天摘了多少个桃子。</p>
</blockquote>
<p><strong>实现过程：</strong><br>
(1) 定义 day、x1、x2 为基本整型，并为 day 和 x2 赋初值 9 和 1。</p>
<p>(2) 使用 while 语句由后向前推出第一天摘的桃子数。</p>
<p>(3) 输出结果。</p>
<p>(4) 程序代码如下：</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

int main(void) {
    int day, x1, x2;    //定义 day、x1、x2 3 个变董为基本整型
    day = 9;
    x2 = 1;
    while (day &gt; 0) {
        x1 = (x2 + 1) * 2;    //第一天的桃子数是第二天桃子数加1后的2倍
        x2 = x1;
        day--;      //因为从后向前推所以天数递减
    }
    printf(&quot;一共是%d个桃子&quot;, x1);  //输出桃子的总数
    return 0;
}
</code></pre>
<p>输出结果：</p>
<pre><code>一共是1534个桃子
</code></pre>
<h3 id="技术要点">技术要点：</h3>
<p>本实例的思路基本上是先找出变量间的关系，也就是要明确第一天桃数和第二天桃子数之间的关系，即第二天桃子数加 1 的 2 倍等于第一天的桃子数。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C语言编程实例：1、三个数从小到大排序输出]]></title>
        <id>https://acoldfront.github.io/post/c-example1/</id>
        <link href="https://acoldfront.github.io/post/c-example1/">
        </link>
        <updated>2020-05-05T03:16:28.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>任意输入 3 个整数，编程实现对这 3 个整数由小到大进行排序。</p>
</blockquote>
<p><strong>实现过程：</strong><br>
(1)定义数据类型，本实例中 a、b、c、t 均为基本整型。</p>
<p>(2) 使用输入函数获得任意 3 个值赋给 a、b、c。</p>
<p>(3) 使用 if 语句进行条件判断，如果 a 大于 b，则借助于中间变量 t 互换 a 与 b 值， 依此类推比较 a 与 c、b 与 c，最终结果即为 a、b、c 的升序排列。</p>
<p>(4) 使用输出函数将 a、b、c 的值依次输出。</p>
<p>(5) 程序的代码如下：</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

int main(void) {
    int a, b, c, t;    //定义4个基本整型变量a、b、c、t
    printf(&quot;请输入a,b,c:\n&quot;);    //双引号内的普通字符原样输出并换行
    scanf(&quot;%d,%d,%d&quot;, &amp;a, &amp;b, &amp;c);      //输入任意3个数

    if (a &gt; b) {    //如果a大于b,借助中间变量t实现a与b值的互换
        t = a;
        a = b;
        b = t;
    }
    if (a &gt; c) {    //如果a大于c,借助中间变量t实现a与c值的互换
        t = a;
        a = c;
        c = t;
    }
    if (b &gt; c) {    //如果b大于c,借助中间变量t实现b与c值的互换
        t = b;
        b = c;
        c = t;
    }

    printf(&quot;三个数的顺序为：%d,%d,%d&quot;, a, b, c);
    return 0;
}
</code></pre>
<p>输出结果：</p>
<pre><code>请输入a,b,c:
5,2,1
三个数的顺序为：1,2,5
</code></pre>
<h3 id="脚下留神">脚下留神：</h3>
<p>本实例使用 scanf(&quot;%d%d%d&quot;,&amp;a,&amp;b,&amp;c); 从键盘中获得任意 3 个数。在输入数据时，在两个数据之间以一个或多个空格间隔，也可以用 Enter 健、Tab 键，不能用逗号作为两个数据间的分隔符。 如果用格式输入函数 scanf(&quot;％d,％d,%d&quot;,&amp;a,&amp;b,&amp;c) 输入数据，两个数据之间要用“,”做间隔。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bandizip(跨平台解压缩软件) v7.04 企业激活版]]></title>
        <id>https://acoldfront.github.io/post/bandizip/</id>
        <link href="https://acoldfront.github.io/post/bandizip/">
        </link>
        <updated>2020-04-21T08:53:47.000Z</updated>
        <summary type="html"><![CDATA[<p>虽然 7-Zip 是开源免费压缩工具中的佼佼者，但用得不是很顺手，今天试了下推荐的 Bandizip 却出人意料的好用！Bandizip 是一款来自韩国的免费优秀的文件压缩/解压缩软件，支持 Win 与 Mac，操作方式与 WinRAR 相似，支持压缩和解压 rar、zip、7z 等众多主流格式…</p>
]]></summary>
        <content type="html"><![CDATA[<p>虽然 7-Zip 是开源免费压缩工具中的佼佼者，但用得不是很顺手，今天试了下推荐的 Bandizip 却出人意料的好用！Bandizip 是一款来自韩国的免费优秀的文件压缩/解压缩软件，支持 Win 与 Mac，操作方式与 WinRAR 相似，支持压缩和解压 rar、zip、7z 等众多主流格式…</p>
<!-- more -->
<h3 id="主要功能">主要功能</h3>
<hr>
<p>支持操作系统: Windows Vista/7/8/10 (x86/x64/ARM64)<br>
许可类型：免费软件(EULA)<br>
全能的压缩/解压/浏览/编辑软件<br>
可提取30多种格式，包括RAR/RAR5/7Z/ZIP等<br>
包含密码压缩和分卷压缩功能<br>
支持多核高速压缩</p>
<h3 id="压缩">压缩</h3>
<hr>
<p>支持的格式: ZIP, 7Z(lzma2), ZIPX(xz), EXE(sfx), TAR, TGZ, LZH(lh7), ISO(joliet), GZ, XZ<br>
ZIP文件修改（添加/删除/重命名）<br>
支持多核并行，压缩速度可提升至多达6倍<br>
加密压缩<br>
支持AES256加密算法<br>
支持4GB 以上大小的文件压缩<br>
对ZIP格式支持Unicode或MBCS文件名<br>
对ZIP/7z格式可进行分卷压缩</p>
<h3 id="解压">解压</h3>
<hr>
<p>支持的格式: 7Z, ACE, AES, ALZ, ARJ, BH, BIN, BZ, BZ2, CAB, Compound(MSI), EGG, GZ, IMG, ISO, ISZ, LHA, LZ, LZH, LZMA, PMA, RAR, RAR5, SFX(EXE), TAR, TBZ, TBZ2, TGZ, TLZ, TXZ, UDF, WIM, XPI, XZ, Z, ZIP, ZIPX, ZPAQ<br>
轻松查看压缩包内文件<br>
可只解压选定文件，支持拖拽解压<br>
可对ZIP和RAR格式添加注释<br>
一步解压TGZ/TBZ格式的文件</p>
<h3 id="功能多样">功能多样</h3>
<hr>
<p>测试文件完整性以确定压缩包是否损坏<br>
支持修改代码页改<br>
可集成至资源管理器右键菜单<br>
<img src="https://acoldfront.github.io//post-images/1587459441655.png" alt="" loading="lazy"></p>
<h3 id="更新日志">更新日志</h3>
<hr>
<p><a href="https://www.bandisoft.com/bandizip/history/">https://www.bandisoft.com/bandizip/history/</a></p>
<h3 id="破解教程">破解教程</h3>
<hr>
<p>去密钥检测，去联网验证、无需断网激活，不反弹！<br>
此企业版离线激活密钥来源PYG TEAM的成员分享<br>
7系列版本，安装后，下载破解补丁，破解后，使用激活码：<br>
00000000-ENT000000-0000000000-16210000<br>
邮箱地址：可任意填写，即随意填个假冒邮箱格式</p>
<p>如何使用？<br>
去验证补丁放安装目录运行，然后启动软件注册；<br>
邮箱地址：可任意填写，激活密钥使用上面这个。</p>
<p><a href="https://pan.baidu.com/s/11b-QgNy7bSagcZAbaL1Ggg">链接: https://pan.baidu.com/s/11b-QgNy7bSagcZAbaL1Ggg 提取码: jpfu</a></p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p>Bandizip各版本功能比较（自v7.0开始分为标准版/专业版/企业版）<br>
<a href="https://www.bandisoft.com/bandizip/help/edition-comparison">https://www.bandisoft.com/bandizip/help/edition-comparison</a></p>
<p>官网下载<br>
6系列版本：【原生无广告】<br>
<a href="https://dl.bandisoft.com/bandizip/BANDIZIP-SETUP.EXE">安装版：https://dl.bandisoft.com/bandizip/BANDIZIP-SETUP.EXE</a></p>
<p><a href="https://dl.bandisoft.com/bandizip/BANDIZIP-PORTABLE-GL-32BIT.ZIP">32位便携版：https://dl.bandisoft.com/bandizip/BANDIZIP-PORTABLE-GL-32BIT.ZIP</a></p>
<p><a href="https://dl.bandisoft.com/bandizip/BANDIZIP-PORTABLE-GL-64BIT.ZIP">64位便携版：https://dl.bandisoft.com/bandizip/BANDIZIP-PORTABLE-GL-64BIT.ZIP</a></p>
<p>7系列版本：<br>
<a href="http://dl.bandisoft.com/bandizip.std/BANDIZIP-SETUP-STD-ALL.EXE">安装版：http://dl.bandisoft.com/bandizip.std/BANDIZIP-SETUP-STD-ALL.EXE</a></p>
<p><a href="http://dl.bandisoft.com/bandizip.std/BANDIZIP-PORTABLE.ZIP">便携版：http://dl.bandisoft.com/bandizip.std/BANDIZIP-PORTABLE.ZIP</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[思维导图软件 XMind ZEN 2020 v10.1.2 全平台 完美破解版]]></title>
        <id>https://acoldfront.github.io/post/xmind-zen-2020/</id>
        <link href="https://acoldfront.github.io/post/xmind-zen-2020/">
        </link>
        <updated>2020-04-07T22:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>XMind ZEN是一款有颜值的思维导图软件，新版本的软件界面比起老版本好看多了，作为一款electron开发出来的软件，自然支持几个端了，支持Windows和Mac版本。</p>
]]></summary>
        <content type="html"><![CDATA[<p>XMind ZEN是一款有颜值的思维导图软件，新版本的软件界面比起老版本好看多了，作为一款electron开发出来的软件，自然支持几个端了，支持Windows和Mac版本。</p>
<!-- more -->
<p>XMind 是一个全功能的思维导图和头脑风暴软件，为激发灵感和创意而生。作为一款有效提升工作和生活效率的生产力工具，受到全球百千万用户的青睐。</p>
<p>这两年思维导图突然就火起来了，各种思维导图软件也是雨后春笋般冒出来了，自 Xmind 发布以来就受到全球多个国家的办公一族喜爱。而 XMind 开发团队成员也在不断的去改进产品以提供优秀的生产力工具和服务，帮助人们节省时间并提升效率为目标。<br>
<img src="https://acoldfront.github.io//post-images/1579860380835.png" alt="" loading="lazy"></p>
<p>全新内核，经典 XMind 体验。<br>
我们努力了3年，100% 重写了思维导图引擎的每一个细节，XMind: ZEN 对 XMind 8 做到了完全兼容，让你有一种全新却不失经典的体验。</p>
<p>无人可超越，只有超越自己。<br>
对所有主题进行了重新设计，为您的每一张导图都注入新的活力。字体渲染也得到了极大的改进，让每一张思维导图既美观又专业。</p>
<p>我们专注，为了让您更专注。<br>
ZEN 模式，寓意为禅。让专注变成一种习惯。</p>
<p>全新 Snowbrush 引擎<br>
我们努力了3年，100% 重写了思维导图的引擎，着眼在未来的黑科技上，提升了思维导图的展示效果，丰富了绘图的元素。</p>
<p>充满惊喜的主题<br>
XMind: ZEN 对所有主题进行了重新设计，为您的每一张导图都注入新的活力，专业的同时又不失丰富元素，好看到让人羡慕。</p>
<p>Font Rendering<br>
由于极大地改进了字体的渲染技术，无论你用 Mac 还是 Windows 创建思维导图，所有文字都以同一样式清晰呈现。XMind: ZEN 精选多款优质字体，爱上编辑导图，从未如此简单。</p>
<p>Markdown<br>
我们相信 Markdown 会为你带来更好的使用体验，将做好的图导出为 Markdown 格式后，会让你更易于阅读。</p>
<p>集专注于 ZEN 模式<br>
ZEN 模式，寓意为禅，让专注变成一种习惯。进入 ZEN 模式，隐藏页面内多余的元素，帮助你全神贯注地绘制每一个主题，心无旁骛地完成工作。</p>
<p>贴纸，原创的更好<br>
设计师原创的贴纸，每一个都精心绘制，更准确地满足你的需求，精彩无处不在。</p>
<p>100% 对 XMind 8 兼容<br>
XMind: ZEN 对 XMind 8 做到了完全兼容，所有 XMind 8 拥有的图形结构，在 XMind: ZEN 中都能完美展现。</p>
<p>导出PDF和印象笔记<br>
将思维导图导出为矢量的 PDF 文件，方便您将导图随意放大和清晰地打印。印象笔记的粉丝们还会惊喜地发现只需简单地点击，便可将导图分享到印象笔记中。</p>
<h2 id="更新日志">###更新日志</h2>
<p>10.1.1</p>
<p>Xmind ZEN更名为Xmind 2020</p>
<ol>
<li>修复了旧版本升级后，启动时可能报错的问题；</li>
<li>修复了 Windows 下可能无法检测到部分字体的问题；</li>
<li>修复了改变字体大小时，可能影响到其他主题的问题；</li>
<li>修复了编辑方程后，画布可能卡住的问题；</li>
<li>修复了输入空方程时会报错的问题；</li>
<li>修复了部分其他已知问题。</li>
</ol>
<h3 id="修改说明">修改说明</h3>
<hr>
<p>基于官网最新版本破解</p>
<p>破解授权，移除验证，去除试用提示</p>
<p>能正常导出图片无水印，PDF无水印，导出word，粘贴图片等高级功能</p>
<p>v2版本导出PNG缩放大小已修复</p>
<h3 id="使用提示">使用提示</h3>
<hr>
<p>将app.asar放入XMind-ZEN安装目录的resources文件夹下替换</p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p><a href="https://pan.baidu.com/s/175dlcFsxq9RsiB_BGt0erw">链接: https://pan.baidu.com/s/175dlcFsxq9RsiB_BGt0erw 提取码: 8kh4</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Android VSCO v158 破解版]]></title>
        <id>https://acoldfront.github.io/post/vsco/</id>
        <link href="https://acoldfront.github.io/post/vsco/">
        </link>
        <updated>2020-04-06T10:17:57.000Z</updated>
        <summary type="html"><![CDATA[<p>VSCO是时下一款非常流行的摄影App。VSCO支持的功能包括摄影App，语音通讯、相机拍照、照片编辑和照片分享等功能。但是其核心还是滤镜非常强大！</p>
]]></summary>
        <content type="html"><![CDATA[<p>VSCO是时下一款非常流行的摄影App。VSCO支持的功能包括摄影App，语音通讯、相机拍照、照片编辑和照片分享等功能。但是其核心还是滤镜非常强大！</p>
<!-- more -->
<p>随着版本的不断升级，VSCO 逐渐成了一款功能强大的摄影App，包含了相机拍照、照片编辑和照片分享三大功能。虽如此，但VSCO依然保持了简单的使用方式(对于已上手用户而言使用非常简单)，可以利用VSCO内置包含了强大手动控制功能的相机进行拍摄，也可以利用VSCO内数量众多的胶片滤镜、照片基础调整工具对照片进行处理，创造出令人着迷、胶片味道十足的手机摄影作品。</p>
<h3 id="修改说明">修改说明</h3>
<hr>
<p>破解会员，解锁全部滤镜</p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p><a href="https://pan.baidu.com/s/1jQyZyfgmDLCubXhswtD77g">链接: https://pan.baidu.com/s/1jQyZyfgmDLCubXhswtD77g 提取码: r7sg </a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WinSnap v5.2.3 便携破解版]]></title>
        <id>https://acoldfront.github.io/post/winsnap/</id>
        <link href="https://acoldfront.github.io/post/winsnap/">
        </link>
        <updated>2020-04-05T03:17:37.000Z</updated>
        <summary type="html"><![CDATA[<p>WinSnap是一款屏幕捕获软件，能够让您得心应手地捕获到需要的屏幕截图。</p>
]]></summary>
        <content type="html"><![CDATA[<p>WinSnap是一款屏幕捕获软件，能够让您得心应手地捕获到需要的屏幕截图。</p>
<!-- more -->
<p>捕捉图像方式灵活，主要可以捕捉整个屏幕、活动窗口、选定区域等，图像输出方式多样，主要包括文件、剪贴板、和邮件。软件具有设置捕捉前延时、自定义捕捉热键、图像文件自动按时间或模板命名、捕捉成功声音提示、预览捕捉图片、图像打印、图像水印、图像反色、图像翻转、图像旋转等功能。<br>
WinSnap轻巧、快速、简单、友好提供截图和图像编辑功能。和其它截图软件相比其最大亮点在于WinSnap可以捕获或去除Winodws 7的 Aero玻璃效果。WinSnap内置了阴影，反射，旋转，水印等效果，支持各种图像格式，并支持自动保存。</p>
<p><strong>WinSnap 主要特点：</strong><br>
[+]灵活的屏幕捕捉功能<br>
[+]内置图像编辑器：箭头，矩形，文本注释<br>
[+]设计用于捕获 Windows Aero 的干净背景<br>
[+]支持透明度的 PNG 和 TIFF 图像格式<br>
[+]高级自动保存和自动复制选项<br>
[+]常规键盘和鼠标控制（打印屏幕更换）<br>
[+]可配置工具菜单中打开外部图像编辑器<br>
[+]小和快速的图像编辑器，比画图更小<br>
[+]多语言用户界面（基于Unicode）<br>
<img src="https://acoldfront.github.io//post-images/1586056964047.png" alt="" loading="lazy"></p>
<h3 id="修改说明">修改说明</h3>
<hr>
<p>便携版制作</p>
<p>强制破解免授权，无需许可证密钥，截图保存无水印</p>
<h3 id="使用提示">使用提示</h3>
<hr>
<p>若出现：从服务器返回了一个参照<br>
对着程序，右键，属性，兼容性，勾选以管理员身份运行。</p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p><a href="https://pan.baidu.com/s/1AVppD7OUoGqk3n5sOl9cDA">链接: https://pan.baidu.com/s/1AVppD7OUoGqk3n5sOl9cDA 提取码: 241q</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[WinRAR v5.90 Final 便携版]]></title>
        <id>https://acoldfront.github.io/post/winrar/</id>
        <link href="https://acoldfront.github.io/post/winrar/">
        </link>
        <updated>2020-04-01T10:40:15.000Z</updated>
        <summary type="html"><![CDATA[<p>WinRAR是一款功能强大的压缩包管理器，它是档案工具RAR在 Windows环境下的图形界面。</p>
]]></summary>
        <content type="html"><![CDATA[<p>WinRAR是一款功能强大的压缩包管理器，它是档案工具RAR在 Windows环境下的图形界面。</p>
<!-- more -->
<p>WinRAR可用于备份数据，缩减电子邮件附件的大小，解压缩从 Internet 上下载的RAR、ZIP及其它类型文件，WinRAR并且可以新建 RAR 及 ZIP 格式等的压缩类文件。WinRAR非常实用、方便，中文化工作更为完善，WinRAR包括主工作界面、右键菜单，甚至连十万字的 .hlp 在线帮助文件、使用手册文件、Readme 文件都完全是中文内容。</p>
<p><strong>WinRAR软件特点</strong></p>
<p>1、压缩率更高</p>
<p>WinRAR 在 DOS 时代就一直具备这种优势，经过多次试验证明，WinRAR 的 RAR 格式一般要比其他的 ZIP 格式高出 10%～30% 的压缩率，尤其是它还提供了可选择的、针对多媒体数据的压缩算法。</p>
<p>2、对多媒体文件有独特的高压缩率算法</p>
<p>WinRAR 对 WAV、BMP 声音及图像文件可以用独特的多媒体压缩算法大大提高压缩率，虽然我们可以将 WAV、BMP 文件转为 MP3．JPG 等格式节省存储空间，但不要忘记 WinRAR 的压缩可是标准的无损压缩。</p>
<p>3、能完善地支持ZIP格式并且可以解压多种格式的压缩包</p>
<p>虽然其他软件也能支持 ARJ、LHA 等格式，但却需要外挂对应软件的 DOS 版本，实在是功能有限。但WinRAR就不同了，不但能解压多数压缩格式，且不需外挂程序支持就可直接建立 ZIP 格式的压缩文件，所以我们不必担心离开了其他软件如何处理 ZIP 格式的问题。</p>
<p>4、设置项目非常完善，并且可以定制界面</p>
<p>通过开始选单的程序组启动WinRAR，在其主界面中选择“选项”选单下的“设置”打开设置窗口，分为常规、压缩、路径、文件列表、查看器、综合六大类，非常丰富，通过修改它们，可以更好地使用 WinRAR。实战：如果同时安装了某款压缩软件与 WinRAR，ZIP 文件的关联经常发生混乱，一般我们只需进入设置窗口，选“综合”标签，将“ WinRAR 关联文件”一栏中的 ZIP 一项打勾，确定后就可使 ZIP 文件与 WinRAR 关联，反之如果将勾去掉，则 WinRAR 自动修改注册表使 ZIP 重新与这个压缩软件的关联。</p>
<p>5、对受损压缩文件的修复能力极强</p>
<p>在网上下载的ZIP、RAR类的文件往往因头部受损的问题导致不能打开，而用WinRAR调入后，只须单击界面中的“修复”按钮就可轻松修复，成功率极高。</p>
<p>6、可以不必解压就可查看压缩包信息</p>
<p>使用WinRAR，选中文件点击信息就可查看压缩包信息。</p>
<p>7、辅助功能设置细致</p>
<p>WinRAR可以在压缩窗口的“备份”标签中设置压缩前删除目标盘文件；可在压缩前单击“估计”按钮对压缩先评估一下；可以为压缩包加注释；可以设置压缩包的防受损功能，等等细微之处也能看出WinRAR的体贴周到。</p>
<p>8、压缩包可以锁住</p>
<p>使用WinRAR双击进入压缩包后，单击命令选单下的“锁定压缩包”就可防止人为的添加、删除等操作，保持压缩包的原始状态。</p>
<p>9、压缩包可以看隐藏文件</p>
<p>你还在为Autorun病毒发愁？Winrar就提供了“透视”功能。把那些隐藏属性的文件一目了然。<br>
<img src="https://acoldfront.github.io//post-images/1585737802815.png" alt="" loading="lazy"></p>
<h3 id="更新日志">更新日志</h3>
<hr>
<p>1.对于具有16个或更多内核的CPU，RAR压缩速度得到了提高。<br>
2.对于创建高度可压缩的数据类型，“快速”方法（等效于-m1命令行）在创建RAR5归档文件时可以实现较高的压缩率。<br>
3.使用的最大线程数从32增加到64。命令行-mt <threads>开关接受从1到64的值。<br>
4. WinRAR设置的“常规”页面上的“多线程”参数将替换为“线程”输入字段，您可以在其中指定所需的CPU线程数。取值范围是1到最大可用逻辑CPU单元数。<br>
5. WinRAR在浏览档案内容时显示打包和解压缩的文件夹大小。<br>
6.“总文件夹”字段添加到WinRAR“信息”命令显示的归档参数列表中。<br>
Windows资源管理器中存档属性中的“存档”页面添加了相同的字段。<br>
7.如果读取存档内容花费的时间很长，则会显示一个包含进度条和“取消”按钮的窗口。它对于访问内容速度较慢的存档格式很有用，例如大型的基于TAR的存档（例如.tar.gz和tar.bz2）<br>
8.可以调整归档和提取进度窗口的大小，也可以调整其他一些命令的进度窗口的大小。<br>
9.改进了具有恢复记录且无数据移位的RAR5档案的“修复”性能。<br>
它在WinRAR 5.80中恶化，现在恢复到原始水平。<br>
10.对具有加密文件名的RAR5归档文件执行基于恢复记录的修复时，不会发出密码提示。可以在不提供密码的情况下执行此命令。<br>
11.如果“转换档案”命令中没有用于转换档案的文件夹，则WinRAR尝试创建该文件夹。<br>
以前的版本无法在不存在的目标文件夹中创建转换后的归档。<br>
12.添加了对GZIP存档的提取支持，并带有可选的标头校验和字段。<br>
13.修复的错误：<br>
a）在处理具有有效恢复记录的归档文件时，“修复”命令可能会错误地显示“恢复记录已损坏”消息。<br>
此消息并未阻止进一步的修复操作；<br>
b）如果默认压缩配置文件中的“快速打开信息”选项设置为“不添加”，并且此配置文件是通过某些命令或对话框加载的，则WinRAR在浏览RAR归档文件的内容时会忽略快速打开信息。<br>
例如，它是在打开存档或密码对话框之后发生的；<br>
c）Ctrl + C“复制”快捷键在存档注释窗口中不起作用；<br>
d）如果设置了“将每个文件放入单独的存档”和“在子文件夹中存档”选项，则WinRAR将忽略在存档名称字段中指定的目标路径。</p>
<h3 id="修改说明">修改说明</h3>
<hr>
<p>官方版集成许可</p>
<p>便携版制作，集成x64和x86版本</p>
<p>能够关联文件</p>
<p>集成无限制许可文件</p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p><a href="https://pan.baidu.com/s/1wDn8z5MBKJKyXgiJk7DwHg">链接: https://pan.baidu.com/s/1wDn8z5MBKJKyXgiJk7DwHg 提取码: 1b4r</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据库管理工具 PremiumSoft Navicat Premium v15.0.12 中文特别版]]></title>
        <id>https://acoldfront.github.io/post/navicat-premium/</id>
        <link href="https://acoldfront.github.io/post/navicat-premium/">
        </link>
        <updated>2020-03-23T04:55:18.000Z</updated>
        <summary type="html"><![CDATA[<p>Navicat premium是一款数据库管理工具。将此工具连接数据库，你可以从中看到各种数据库的详细信息。包括报错，等等。当然，你也可以通过他，登陆数据库，进行各种操作。Navicat Premium是一个可多重连线资料库的管理工具，它可以让你以单一程式同时连线到 MySQL、SQLite、Oracle 及 PostgreSQL 资料库，让管理不同类型的资料库更加的方便。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Navicat premium是一款数据库管理工具。将此工具连接数据库，你可以从中看到各种数据库的详细信息。包括报错，等等。当然，你也可以通过他，登陆数据库，进行各种操作。Navicat Premium是一个可多重连线资料库的管理工具，它可以让你以单一程式同时连线到 MySQL、SQLite、Oracle 及 PostgreSQL 资料库，让管理不同类型的资料库更加的方便。</p>
<!-- more -->
<p>Navicat Premium结合了其他Navicat成员的功能。有了这种连线到不同资料库类型的能力，Navicat Premium支持在 MySQL、SQLite、Oracle 及 PostgreSQL 之间传输资料。它支持大部分的 MySQL、SQLite、Oracle 及 PostgreSQL 功能，包括预存程序、事件、触发器、函式、检视等。<br>
Navicat Premium可以让你简单并快速的在多种资料库系统间传输资料，或传输一份以SQL格式及编码设计的纯文字档。<br>
不同的资料库的批次处理任务也可以设定排程并在指定的时间执行。其他功能包括汇入/汇出精灵、查询建立工具、报表产生器、资料同步、备份、工作排程及更多。</p>
<p>Navicat的的功能足以提供专业开发人员的所有需求，但是对资料库伺服器的新手来说又相当容易学习。<br>
Navicat Premium [2] 有三种平台版本- Microsoft Windows、Mac OS X及Linux。它可以让使用者连接本地/远端伺服器、提供一些实用的工具如资料/结构同步、汇入/汇出、备份/回复及报表以协助管理资料的流程。</p>
<p>Navicat Premium(导航猫数据库管理)是一个可多重连线资料库的管理工具，Navicat Premium(导航猫数据库管理)可以让你以单一程式同时连线到MySQL、SQLite、Oracle 及 PostgreSQL资料库，让管理不同类型的资料库更加的方便。 　Navicat Premium可以让你简单并快速的在多种资料库系统间传输资料，或传输一份以SQL格式及编码设计的纯文字档。</p>
<p>不同的资料库的批次处理任务也可以设定排程并在指定的时间执行。其他功能包括汇入/汇出精灵、查询建立工具、报表产生器、资料同步、备份、工作排程及更多。</p>
<p>Navicat的的功能足以提供专业开发人员的所有需求，但是对资料库伺服器的新手来说又相当容易学习。<br>
<img src="https://acoldfront.github.io//post-images/1580014704119.png" alt="" loading="lazy"></p>
<p>Navicat Cloud<br>
Navicat 提供 Navicat Cloud 服务给用户。同步你的连接设置、模型、查询和虚拟组到云。这样你就能随时随地实时访问他们。有了 Navicat Cloud，你可以善用一天中的每分每秒，以最大限度提高你的工作效率。了解更多›</p>
<p>安全连接<br>
Navicat 可以让你通过 SSH 通道创建安全的 SSH 阶段作业，确保两台主机之间的连接受到强大验证和安全加密的保护。验证方式可使用密码或公钥和私钥对。Navicat 亦支持 HTTP 通道，让你灵活地绕过限制直接数据库服务器连接的互联网服务供应商。</p>
<p>对象设计器<br>
使用专业的对象设计器创建、修改和设计所有数据库对象，例如：表、视图、函数、过程、索引、触发器和序列。无需编写复杂的 SQL 来创建和编辑对象，你会知道你正使用什么选项。</p>
<p>表查看器<br>
网格或表单查看<br>
使用网格查看添加、修改和删除记录。用类似数据表的功能浏览网格查看，例如排序和隐藏数据组，使用我们的助理编辑器：备注、十六进制、图像或更多</p>
<p>你也可以用表单查看操作记录。清楚显示记录的字段名和其值，不必担心误解数据。</p>
<p>外键数据选择<br>
在你的数据库使用外键关系锚定参考的查找表，并自动建立下拉列表。无需持续对照参考主表，你可以简化你的工作流程和提升效率。<br>
SQL 创建工具或编辑器</p>
<p>SQL 创建工具<br>
视觉化 SQL 创建工具让你创建和编辑查询或视图，而不必担心语法和正确命令的用法。选择你想在表中执行的操作，它会为你编写 SQL 语句。</p>
<p>自动完成代码<br>
使用我们的自动完成代码功能，能快速地在 SQL 编辑器中创建 SQL 语句。无论你想选择的是数据库对象的属性或 SQL关键字，你只需从下拉列表中选择。</p>
<p>数据库设计器<br>
逆向工程<br>
使用 Navicat 的逆向工程，你可以从一个现有的数据库创建数据库模型，可视化地显现和编辑你的数据库结构或创建一个图形模型，并由模型生成一个数据库。</p>
<p>正向工程和脚本生成<br>
同步到数据库功能给你充分了解所有数据库的差异。生成必要的同步脚本来更新目标数据库，并使其与模型相同。</p>
<p>导出 SQL 让你有机会全面控制最终的 SQL 脚本，生成参照完整性规则，生成模型的独立部份、注释、字符集等。它可以节省你的工作时间。</p>
<p>PL/SQL 代码调试器<br>
PL/SQLPL/PGSQL<br>
PL/SQL 调试器提供的功能，如设置断点，步进通过程序，查看和修改变量值，及查看调用堆栈。你可以直接从 Navicat 的工作区中调试 PL/SQL 代码如过程和函数、对象方法和触发器。</p>
<p>数据处理工具<br>
导入或导出向导<br>
从不同格式的文件导入数据到表，例如 Access、Excel、XML、TXT、CSV、JSON 及更多。而且，在设置数据源连接后，你可以从 ODBC 导入数据。只需简单地选择你要导入的表，或使用添加查询按钮指定查询。同样，你可以将数据导出到各种格式，如 Excel、TXT、CSV、DBF、XML 等。</p>
<p>数据传输<br>
在多个不同的数据库系统间轻松地传输数据 – MySQL、MariaDB、SQL Server、Oracle、PostgreSQL 和 SQLite 数据库。你可以选择以指定的 SQL 格式和编码导出数据为 SQL 文件。这个功能可大大的简化迁移数据的进程。</p>
<p>数据或结构同步<br>
从一个数据库中以详细的分析进程传输数据到另外一个数据库。同样，你可以比对并修改表的结构。在数据和结构同步中，目标数据库可以在源服务器，也可以在其他的服务器。</p>
<p>备份或还原<br>
定期备份数据库对用户是相当重要的。备份或还原全部表、记录、视图等。如果数据损坏，不用再重做，让你能高枕无忧。</p>
<p>计划<br>
不同数据库的设置文件可以创建在单一批处理作业，这样你就可以设置计划并在指定的时间运行。批处理作业可以创建的对象包括打印报表、数据库备份、查询、数据传输、数据同步、导入和导出。当任务完成后，Navicat 可自动传送电子邮件通知给你指定的收件人。此外，导出的文件或打印的报表可以添加到批处理作业作为电子邮件附件，让你可以轻易与其他人共享你的数据。<br>
报表创建工具或查看器 *只限于 Windows 版本</p>
<p>使用我们的用户友好 GUI 报表创建工具创建各种不同类型的报表。设计发票、统计、邮寄标签及更多其他报表。输出报表到多种格式 – text、PDF、Lotus、Excel、Graphic、Html 及更多。</p>
<p>Navicat Report Viewer 可让你浏览由报表创建工具设计的报表。最酷的是你可以与计算机沒有安装 Navicat，但安装了 Navicat Report Viewer 的人共享报表。</p>
<p>实用工具<br>
ER 图表<br>
ER 图表查看能通过以图形格式显示数据库结构来帮助你了解你的数据库，让你可以看到数据库中表之间的关联。</p>
<p>连接颜色或虚拟组<br>
连接颜色功能可以让你立刻知道你连接到哪个服务器。显示在子窗口工具栏的颜色指示，用于识别连接和它们的数据库对象。虚拟组功能分类对象到不用的组，令对象和连接有一个更好的组织。</p>
<p>树或对象筛选<br>
使用树或对象筛选功能收窄显示数据对象的列表。简单地需输入文本，然后只会显示符合指定字符串开始的数据库对象。</p>
<p>收藏夹<br>
Navicat 让你更容易地回到你常访问的数据库对象。通过添加路径到收藏夹列表，你只需一次点击就可以打开这些数据库对象。</p>
<p>系统需求<br>
Windows<br>
Microsoft Windows XP SP3、Vista、Windows 7、Windows 8、Windows 8.1、Windows 10、Server 2003、Server 2008、Server 2012</p>
<p>Mac<br>
Mac OS X 10.7 或以上版本<br>
Intel 处理器</p>
<p>Linux<br>
Ubuntu 12.04、Ubuntu 14.04、CentOS 6.7、CentOS 7、Fedora 22、Fedora 23、Linux Mint 13、Linux Mint 17.3、openSUSE 13.2、openSUSE 42.1</p>
<h3 id="修改说明">修改说明</h3>
<hr>
<p>基于DeltaFox大神Navicat_Keygen_Patch_v5.6  Crazer汉化</p>
<h3 id="使用提示">使用提示</h3>
<hr>
<p>使用前查看“使用说明&quot;文档<br>
或者<br>
<a href="https://acoldfront.github.io/post/navicat-keygen-patch/">查看Navicat产品_补丁_注册机 使用教程</a></p>
<h3 id="下载地址">下载地址</h3>
<hr>
<p><a href="https://pan.baidu.com/s/1N32CbhM_-hIUdH_8zVzOPg">链接: https://pan.baidu.com/s/1N32CbhM_-hIUdH_8zVzOPg 提取码: 4vgd</a></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C语言求最小公倍数和最大公约数四种算法(经典)]]></title>
        <id>https://acoldfront.github.io/post/cdivisormultiple/</id>
        <link href="https://acoldfront.github.io/post/cdivisormultiple/">
        </link>
        <updated>2020-03-19T03:28:46.000Z</updated>
        <content type="html"><![CDATA[<p>最小公倍数：数论中的一种概念，两个整数公有的倍数成为他们的公倍数，其中一个最小的公倍数是他们的最小公倍数，同样地，若干个整数公有的倍数中最小的正整数称为它们的最小公倍数，维基百科：<a href="http://zh.wikipedia.org/wiki/%E6%9C%80%E5%B0%8F%E5%85%AC%E5%80%8D%E6%95%B8">定义点击打开链接</a><br>
求最小公倍数算法：<br>
最小公倍数=两整数的乘积÷最大公约数</p>
<p>求最大公约数算法：<br>
(1)辗转相除法：<br>
有两整数a和b：<br>
① a%b得余数c<br>
② 若c=0，则b即为两数的最大公约数<br>
③ 若c≠0，则a=b，b=c，再回去执行①</p>
<p>例如求27和15的最大公约数过程为：<br>
27÷15 余12，15÷12余3，12÷3余0，因此，3即为最大公约数</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

//辗转相除法求最大公约数
int main(void) {
    int m, n;
    int a, b, c;
    printf(&quot;请输入两个数：&quot;);
    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);
    m = a;
    n = b;
    while (b != 0) {   //余数不为0，继续相除，直到余数为0
        c = a % b;
        a = b;
        b = c;
    }
    printf(&quot;最大公约数：%d\n&quot;, a);
    printf(&quot;最小公倍数：%d\n&quot;, m * n / a);
    return 0;
}
</code></pre>
<p>提供一种简写的方式：</p>
<pre><code class="language-c">int gcd(int a,int b)
{
    return b==0?a:gcd(b,a%b);
}
</code></pre>
<p>⑵ 相减法：<br>
有两整数a和b：<br>
① 若a&gt;b，则a=a-b<br>
② 若a&lt;b，则b=b-a<br>
③ 若a=b，则a（或b）即为两数的最大公约数<br>
④ 若a≠b，则再回去执行①</p>
<p>例如求27和15的最大公约数过程为：<br>
27－15＝12( 15&gt;12 ) 15－12＝3( 12&gt;3 )<br>
12－3＝9( 9&gt;3 ) 9－3＝6( 6&gt;3 )<br>
6－3＝3( 3==3 )<br>
因此，3即为最大公约数</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

//相减法求最大公约数
int main(void) {
    int m, n;
    int a, b, c;
    printf(&quot;请输入两个数：&quot;);
    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);
    m = a;
    n = b;
    while (a != b) {   //a, b不相等，大数减小数，直到相等为止。
        if (a &gt; b)
            a = a - b;
        else
            b = b - a;
    }
    printf(&quot;最大公约数：%d\n&quot;, a);
    printf(&quot;最小公倍数：%d\n&quot;, m * n / a);
    return 0;
}
</code></pre>
<p>⑶穷举法：<br>
有两整数a和b：<br>
① i=1<br>
② 若a，b能同时被i整除，则t＝i<br>
③ i++<br>
④ 若 i &lt;= a(或b)，则再回去执行②<br>
⑤ 若 i &gt; a(或b)，则t即为最大公约数，结束</p>
<p>改进：<br>
① i= a(或b)<br>
② 若a，b能同时被i整除，则i即为最大公约数，<br>
结束<br>
③ i--，再回去执行②</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

//穷举法求最大公约数
int main(void) {
    int m, n;
    int a, b, i, t;
    printf(&quot;请输入两个数：&quot;);
    scanf(&quot;%d%d&quot;, &amp;a, &amp;b);
    m = a;
    n = b;
    for (i = 1; i &lt;= a; ++i) {
        if (a % i == 0 &amp;&amp; b % i == 0)
            t = i;
    }
    /*  改进后的
    for (t= a; t&gt;0; t-- )
        if ( a%t == 0 &amp;&amp; b%t ==0 )
            break; 
    */
    printf(&quot;最大公约数：%d\n&quot;, t);
    printf(&quot;最小公倍数：%d\n&quot;, m * n / t);
    return 0;
}
</code></pre>
<pre><code class="language-c"> //穷举法求最小公倍数
for (i = a;; i++)
    if (i % a == 0 &amp;&amp; i % b == 0) break;
printf(&quot;最小公倍数：%d\n&quot;, i);

//多个数的最大公约数和最小公倍数
for (i = a; i &gt; 0; i--)
    if (a % i == 0 &amp;&amp; b % i == 0 &amp;&amp; c % i == 0)
        break;
printf(&quot;最大公约数：%d\n&quot;, i);
for (i = a;; i++)
    if (i % a == 0 &amp;&amp; i % b == 0 &amp;&amp; i % c == 0)
        break;
printf(&quot;最小公倍数：%d\n&quot;, i);
</code></pre>
<p>⑷取模法：<br>
求最小公倍数：</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

//求最小公倍数
int main(void) {
    int x, y;
    int lcm;
    printf(&quot;请输入两个数：&quot;);
    scanf(&quot;%d%d&quot;, &amp;x, &amp;y);
    if (x &gt; y)
        lcm = x;
    else
        lcm = y;
    while (lcm % x || lcm % y)
        lcm++;
    printf(&quot;最小公倍数：%d\n&quot;, lcm);
    return 0;
}
</code></pre>
<p>求最大公约数：</p>
<pre><code class="language-c">#include &lt;stdio.h&gt;

//求最大公约数
int main(void) {
    int x, y;
    int gcd;
    printf(&quot;请输入两个数：&quot;);
    scanf(&quot;%d%d&quot;, &amp;x, &amp;y);
    if (x &gt; y)
        gcd = y;
    else
        gcd = x;
    while (x % gcd || y % gcd)
        gcd--;
    printf(&quot;最大公约数：%d\n&quot;, gcd);
    return 0;
}
</code></pre>
]]></content>
    </entry>
</feed>